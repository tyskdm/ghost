' # [@ GHOST.PJIM] Project Integration Management Process
'
' ### 4.1. [@activity] Main
'
@startuml Main

skinparam monochrome    true
skinparam shadowing     false
skinparam PartitionBorderThickness 1
skinparam ActivityBarColor dimgrey

' Roles
| Project Manager |
| Deliverables |

' Activities
| Project Manager |

start

:T1. Initiation( );

repeat
    :T2. Planning( );

    | Deliverables |
        note right
        Project Plan
        ----
        * Calling the method ""foo( )"" is prohibited
        end note
    | Project Manager |

    repeat  :T3. Execution( );
        :T4. Monitoring( );

        if (B1. all Done?) then (Yes)
            (e)
        else (No)
        endif

    repeat while (B2. Deviation?) is (No)

backward :T5. Controlling( );

repeat while ( ) is (Some deviation from the plan)
detach

:A1. onExit<

(e)

:T6. Closing( );

| Deliverables |
    note right
    Project Plan
    ----
    * Calling the method ""foo( )"" is prohibited
    end note
| Project Manager |

stop

@enduml


'
' ### 4.2. [@activity] Initiation
'
@startuml Initiate

!include style.iuml

' Roles
| Project Manager |
| Deliverables |

' Activities
| Project Manager |
start

:T1. Create a blank //ProjectPlan//;
| Deliverables |
    note right
    D1. Project Plan (C)
    ----
    * Blank plan created from template. 
    end note
| Project Manager |

repeat
repeat

fork
    :T2. PJM::Initiate();
fork again
    :T3. SWE::Initiate();
fork again
    :T4. SQA::Initiate();
endfork

:T5. Adjust //ProjectPlan// to integrate;

repeat while ( B1. OK? ) is (No)

:T6. PJM::Estimate(ProjectPlan);
| Deliverables |
    note right
    D2. Project Estimation Record
    ----
    * Initial estimation
    end note
| Project Manager |

repeat while ( B2. PJM::GetApproval (\n        ProjectPlan,\n        ProjectEstimationRecord ) ) is (No)

partition "Infrastructure" {
    :T7. WPM::Initiate();
    :T8. ISM::Initiate();
}

:T9. WPM::CreateRepository();
| Deliverables |
    note right
    D3. Project Repository
    end note
| Project Manager |

:T10. Create the initial baseline
    of //ProjectPlan//;
| Deliverables |
    note right
    D1. Project Plan (U)
    ----
    * Initial version of //ProjectPlan//
    end note
| Project Manager |

stop

@enduml

'
' ### 4.3. [@activity] Planning
'
@startuml Planning

skinparam monochrome    true
skinparam shadowing     false
skinparam PartitionBorderThickness 1
skinparam ActivityBarColor dimgrey

' Roles
| Project Manager |
| Deliverables |

' Activities
| Project Manager |
start

repeat

fork
    :T1. Plan PJM;
fork again
    :T2. Plan SWE;
fork again
    :T3. Plan SQA;
endfork

:T4. Adjust to integrate;
| Deliverables |
    note right
    D2. Integrated Project Plan
    ----
    * Calling the method ""foo( )"" is prohibited
    end note
| Project Manager |

repeat while (B1. OK?) is (No)

:T5. Estimate the project;

stop


@enduml

